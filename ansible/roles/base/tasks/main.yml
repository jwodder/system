---
- name: Install essential software
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - apt-transport-https
    - fail2ban
    - git
    - htop
    - libpam-google-authenticator
    - moreutils  # chronic
    - software-properties-common
    - unzip
    - ufw
    - zip

- name: Create swap space
  command: fallocate -l {{ansible_memtotal_mb * 2}}M /swapfile
  args:
    creates: /swapfile
  register: createdSwap

- name: Set up swap space
  block:
    - file: path=/swapfile mode=0600
    - command: mkswap /swapfile
    - lineinfile: dest=/etc/fstab line="/swapfile none swap sw 0 0"
    - command: swapon /swapfile
  when: createdSwap|changed

#- name: Reset any changes made to ufw
#  ufw: state=reset

- name: Deny all incoming connections
  ufw: policy=deny proto=any direction=incoming

- name: Allow incoming SSH connections
  ufw: rule=allow to_ip=any to_port=22 proto=any direction=in

- name: Enable ufw
  ufw: state=enabled

- name: Enable Google Authenticator in PAM
  lineinfile:
    dest: /etc/pam.d/sshd
    line: 'auth required pam_google_authenticator.so'
    insertafter: EOF
  notify:
    - Restart SSHd

- name: Enable Google Authenticator in sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication\s+'
    line: 'ChallengeResponseAuthentication yes'
  notify:
    - Restart SSHd

- name: Set up Google Authenticator for root
  shell: 'yes | google-authenticator'
  args:
    creates: /root/.google_authenticator

- name: Allow/forbid root login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin\s+'
    line: 'PermitRootLogin {{root_login|ternary("yes", "no")}}'
  notify:
    - Restart SSHd

- name: Set /etc/skel
  ### Do I also need to delete /etc/skel/.bash_logout?
  ### Use `synchronize` with `delete: true`?
  copy: src=skel/ dest=/etc/skel owner=root group=root

- name: Enable Bash completion globally
  command: >
    sed -i~ -e '/^# enable bash completion/,/^$/{/^# enable/b; s/^#//}'
        /etc/bash.bashrc

- name: Create /var/log/jwodder
  file:
    path: /var/log/jwodder
    state: directory
    group: syslog
    mode: 0775

- name: Configure popularity-contest
  debconf:
    name: popularity-contest
    question: popularity-contest/participate
    vtype: boolean
    value: "{{popcon}}"
  register: popcon_changed

- name: Enable new popularity-contest settings
  command: dpkg-reconfigure -f noninteractive popularity-contest
  when: popcon_changed|changed

- name: Set timezone to UTC
  copy: dest=/etc/timezone content="Etc/UTC\n"
  register: timezone_changed

- name: Enable new timezone setting
  command: dpkg-reconfigure -f noninteractive tzdata
  when: timezone_changed|changed
