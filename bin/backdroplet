#!/bin/bash
# Usage: sudo ./backdroplet [--rsync-only] [VENV_PATH]
((EUID == 0)) || exec sudo "$0" "$@"

if [ "$1" = "--rsync-only" ]
then rsync_only=1
     shift
fi

ROOT=/var/backups/jwodder
VENV_PATH="${1:-/usr/local/virtualenvs/dropbox}"

set -ex
mkdir -p "$ROOT"

for dir in /root /home /var/mail /var/mail.old /var/www /etc/letsencrypt \
           /opt/jwodder
do if [ -e "$dir" ]
   then if [ "$dir" = /var/www ]
        then links=
        else links=--copy-unsafe-links
        fi
        rsync -avR $links --delete --delete-excluded \
              --exclude-from=/opt/jwodder/etc/backup.exclude \
              --exclude-from=<(find "$dir" -type d -exec test -e {}/.norsync ';' -print) \
              "$dir" "$ROOT"
   else rm -rf "$ROOT$dir"
   fi
done

if [ "$(dpkg-query -Wf '${db:Status-Abbrev}' postgresql 2>/dev/null)" = "ii " ]
then sudo -u postgres pg_dumpall > "$ROOT/postgres.sql"
# Don't use `-f` here, as postgres can't write to $ROOT.
else rm -rf "$ROOT/postgres.sql"
fi

[ -z "$rsync_only" ] || exit 0

cd "$ROOT"
TARBALL=/var/backups/`hostname`-`date -u +%Y%m%dT%H%M%SZ`.tgz
tar zcf "$TARBALL" .

$VENV_PATH/bin/python /opt/jwodder/bin/dropboxadd "$TARBALL" \
                                                  /Historical/Backups/Droplets/

rm -f "$TARBALL"
