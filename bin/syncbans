#!/usr/bin/python
import argparse
import json
import re
import subprocess
import sys
from   psycopg2 import connect

credsfile = '/home/jwodder/system/etc/tmpban.json'

iso8601 = '%Y-%m-%dT%H:%M:%SZ'

parser = argparse.ArgumentParser()
parser.add_argument('-d', '--days', type=int, help='days to ban addresses that are in UFW but not in database')
parser.add_argument('-r', '--remove', action='store_true', help='addresses in database but not in UFW are removed instead of added to UFW')
args = parser.parse_args()

if args.days is not None and args.days < 1:
    raise SystemExit('%s: --days must be at least 1' % (sys.argv[0],))

with open(credsfile) as fp:
    creds = json.load(fp)
db = connect(**creds)
cursor = db.cursor()

inUFW = set()
banlist = subprocess.check_output(['sudo', 'ufw', 'show', 'added'])
for rule in banlist.splitlines():
    m = re.search(r'^ufw deny from (\d+(\.\d+){3})', rule)
    if m:
        ip_addr = m.group(1)
        inUFW.add(ip_addr)
        cursor.execute('SELECT 1 FROM bans WHERE ip_addr = %s', (ip_addr,))
        if cursor.fetchone() is None:
            if args.days is None:
                subprocess.check_output(['sudo', 'ufw', 'delete', 'deny', 'in',
                                         'from', ip_addr])
                print 'Deleting unregistered ban for', ip_addr
            else:
                cursor.execute('''
                    INSERT INTO bans (ip_addr, ban_start, ban_end, reason)
                    VALUES (%s, now(), now() + interval %s DAY, 'autosync')
                ''', (ip_addr, str(args.days)))
                db.commit()
                print 'Registered ban for', ip_addr

cursor.execute("SELECT ip_addr, ban_start, ban_end, reason FROM bans")
for ip_addr, ban_start, ban_end, reason in cursor.fetchall():
    about = '%s (%s/%s; reason: %r)' % (ip_addr, ban_start.strftime(iso8601), ban_end.strftime(iso8601), reason)
    if ip_addr not in inUFW:
        if not args.remove:
            subprocess.check_output(['sudo', 'ufw', 'insert', '1', 'deny',
                                     'in', 'from', ip_addr])
            print 'Reinstating ban for', about
        else:
            cursor.execute('DELETE FROM bans WHERE ip_addr = %s', (ip_addr,))
            db.commit()
            print 'Unregistered lapsed ban for', about
