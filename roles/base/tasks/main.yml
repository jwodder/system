---
- name: Install essential software
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - apt-transport-https
    - build-essential
    - curl
    - fail2ban
    - git
    - htop
    - jq
    - libpam-google-authenticator
    - moreutils  # chronic
    - patch
    - python
    - python-dev
    - python3
    - python3-dev
    - software-properties-common  # apt-add-repository
    - tree
    - unattended-upgrades
    - unzip
    - ufw
    - wget
    - zip

- name: Create swap space
  command: fallocate -l {{ansible_memtotal_mb * 2}}M /swapfile
  args:
    creates: /swapfile
  register: createdSwap

- block:
    - file: path=/swapfile mode=0600
    - command: mkswap /swapfile
    - lineinfile: dest=/etc/fstab line="/swapfile none swap sw 0 0"
    - command: swapon /swapfile
  when: createdSwap is changed

#- name: Reset any changes made to ufw
#  ufw: state=reset

- name: Deny all incoming connections
  ufw: policy=deny proto=any direction=incoming

- name: Allow incoming SSH connections
  ufw: rule=allow to_ip=any to_port=22 proto=any direction=in

- name: Enable ufw
  ufw: state=enabled

- name: Keep UFW messages from being logged to files other than ufw.log
  lineinfile:
    dest: /etc/rsyslog.d/20-ufw.conf
    regexp: '^\s*#?\s*&\s+(~|stop)\s*$'
    line: '& ~'
    insertafter: EOF
    backup: true
  notify:
    - Restart rsyslog

- name: Give some syslog facilities their own logfiles
  lineinfile:
    dest: /etc/rsyslog.d/50-default.conf
    regexp: '^#?{{item.key}}\s+{{item.value}}$'
    line: '{{item.key}} {{item.value}}'
    backup: true
  with_dict:
    "cron.*": /var/log/cron.log
    "user.*": -/var/log/user.log
    mail.info: -/var/log/mail.info
    mail.warn: -/var/log/mail.warn
  notify:
    - Restart rsyslog

- name: Enable Google Authenticator in PAM
  lineinfile:
    dest: /etc/pam.d/sshd
    line: 'auth required pam_google_authenticator.so'
    insertafter: EOF
  notify:
    - Restart SSHd

- name: Enable Google Authenticator in sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication\s+'
    line: 'ChallengeResponseAuthentication yes'
  notify:
    - Restart SSHd

- name: Forbid root login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin\s+'
    line: 'PermitRootLogin no'
  notify:
    - Restart SSHd

- name: Set /etc/skel
  synchronize:
    src: skel/
    dest: /etc/skel
    archive: true
    delete: true
    owner: false
    group: false

- name: Configure APT
  copy:
    src: apt.conf
    dest: /etc/apt/apt.conf.d/99jwodder

- name: Configure popularity-contest
  debconf:
    name: popularity-contest
    question: popularity-contest/participate
    vtype: boolean
    value: "{{popcon}}"
  register: popcon_changed

- name: Enable new popularity-contest settings
  command: dpkg-reconfigure -f noninteractive popularity-contest
  when: popcon_changed is changed

- name: Set timezone to UTC
  timezone: name=Etc/UTC

- name: Enable unattended upgrades
  debconf:
    name: unattended-upgrades
    question: unattended-upgrades/enable_auto_updates
    vtype: boolean
    value: true
  register: unattup

- name: Enable new unattended-upgrades settings
  command: dpkg-reconfigure -f noninteractive unattended-upgrades
  when: unattup is changed

- name: Configure fail2ban
  copy:
    src: "fail2ban/{{item}}"
    dest: "/etc/fail2ban/{{item}}"
    backup: true
  with_items:
    - fail2ban.d/dbpurgeage.local
    - jail.d/defaults.local
    - jail.d/recidive.local
    - jail.d/sshd.local
  notify:
    - Restart fail2ban
