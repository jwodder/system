---

### TODO: Add a DNS A record (`mail.varonathe.org`) pointing to the mail server's IP

### TODO: Add a DNS MX record pointing to `mail.varonathe.org`

- name: Allow incoming SMTP connections
  ufw: rule=allow to_ip=any to_port=25 proto=any direction=in

- debconf:
    name: postfix
    question: postfix/main_mailer_type
    vtype: select
    value: Internet Site

- debconf:
    name: postfix
    question: postfix/mailname
    vtype: string
    value: "{{mail_origin}}"

- apt: name={{item}} state=present update_cache=no
  with_items:
    - mailutils
    - opendkim
    - opendkim-tools
    - postfix
    - postgrey
    - procmail

- include: dkim.yml
- include: postwhite.yml

- name: Create luser_relay user
  user:
    name: "{{luser}}"
    groups: mail
    append: true
    shell: /bin/bash
    home: "/home/{{luser}}"
    move_home: true
    comment: 'Mail Failure'

- file: dest=/var/log/jwodder/{{item}} mode=0666 state=touch
  with_items:
    - maillog.err
    - procmail.err
    - fatal.email

- name: Remove the contents of /etc/postgrey/whitelist_recipients
  copy:
    dest: /etc/postgrey/whitelist_recipients
    content: ''

- name: Whitelist e-mails sent via Mandrill
  copy:
    dest: /etc/postgrey/whitelist_clients.local
    content: 'mandrillapp.com\n'

- name: Configure Postfix
  template:
    src: main.cf
    dest: /etc/postfix/main.cf
  notify:
    - Restart Postfix

- name: Configure /etc/aliases
  template:
    src: aliases
    dest: /etc/aliases
  notify:
    - Run newaliases

### TODO: Make this conditional on whether PostgreSQL is installed?
### (Some sort of integration with PostgreSQL is needed here.)

- name: Install bin/maillog
  copy:
    src: bin/maillog
    dest: "{{jwodder_root}}/bin/maillog"
    mode: 0755

- name: Install bin/mailuser
  copy:
    src: bin/mailuser
    dest: "{{jwodder_root}}/bin/mailuser"
    mode: 0755

- template: src=etc.procmailrc dest=/etc/procmailrc

- template:
    src: luser.procmailrc
    dest: /home/{{luser}}/.procmailrc
    owner: "{{luser}}"
    group: "{{luser}}"

- include: admin.yml
  when: admin_user is defined

- name: Create /var/mail.old
  file:
    path: /var/mail.old
    state: directory
    owner: mail
    group: mail
    mode: 0775

- copy:
    src: mailboxes.logrotate
    dest: /etc/logrotate.d/mailboxes
    # The logrotate manpage doesn't mention that you need to chown root, but
    # it's very necessary.
    owner: root
    group: root

- name: Create cronjob for deleting old e-mails
  copy:
    dest: /etc/cron.weekly/purge-mail
    content: |
        #!/bin/bash
        find /var/mail.old -type f -mtime +42 -delete
    mode: 0755

- name: Configure fail2ban
  copy:
    src: postfix.local
    dest: /etc/fail2ban/jail.d/postfix.local
    backup: true
  notify:
    - Restart fail2ban
